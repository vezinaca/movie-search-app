{"version":3,"sources":["MovieCard.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["props","className","src","movie","poster_path","alt","title","release_date","vote_average","overview","App","useState","query","setQuery","movies","setMovies","allMovies","filter","map","MovieCard","id","onSubmit","e","preventDefault","url","fetch","then","response","json","data","console","log","results","type","placeholder","value","onChange","evt","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAEe,GCFA,I,MDEA,SAACA,GACZ,OAEI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,cACXC,IAAG,0DAAqDF,EAAMG,MAAMC,aACpEC,IAAKL,EAAMG,MAAMG,MAAQ,YAE7B,sBAAKL,UAAU,gBAAf,UACA,oBAAIA,UAAU,cAAd,SAA6BD,EAAMG,MAAMG,QACzC,4BAAG,mDAAsBN,EAAMG,MAAMI,kBACrC,4BAAG,6CAAgBP,EAAMG,MAAMK,kBAC/B,mBAAGP,UAAU,aAAb,SAA2BD,EAAMG,MAAMM,mB,ME+CpCC,MAvDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,IAF1B,mBAEJG,EAFI,KAEIC,EAFJ,KAyBLC,EAAYF,EAAOG,QAAO,SAAAd,GAAK,OAAIA,EAAMC,eAAac,KAAI,SAAAf,GAAK,OACjE,cAACgB,EAAD,CAA0BhB,MAAOA,GAAjBA,EAAMiB,OAG1B,OACI,sBAAKnB,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,gCACA,uBAAMA,UAAU,OAAOoB,SAlBV,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAAG,kHAA8GZ,EAA9G,+BACTa,MAAMD,GACDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFC,QAAQC,IAAIF,EAAKG,SACjBjB,EAAUc,EAAKG,aAWnB,UACI,uBAAO/B,UAAU,QAAjB,oBACA,uBACIgC,KAAK,OACLhC,UAAU,QACViC,YAAY,WACZC,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAASxB,EAASwB,EAAIC,OAAOH,UAG3C,wBAAQlC,UAAU,SAAlB,uBAEJ,qBAAKA,UAAU,YAAf,SACKe,QCvCFuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ea9894b8.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default (props) => {\n    return(\n        \n        <div className=\"card\"  >\n            <img className=\"card--image\"\n                src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${props.movie.poster_path}`}\n                alt={props.movie.title + ' poster'}\n                />\n            <div className=\"card--content\">\n            <h3 className=\"card--title\">{props.movie.title}</h3>\n            <p><small>RELEASE DATE: {props.movie.release_date}</small></p>\n            <p><small>RATING: {props.movie.vote_average}</small></p>\n            <p className=\"card--desc\">{props.movie.overview}</p>\n            </div>\n\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport {useState} from \"react\";\nimport MovieCard from \"./MovieCard\";\nimport './style.css';\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n    const [movies, setMovies] = useState([]);\n\n    /*\n    async function getMovies(e){\n        e.preventDefault();\n\n        const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=2833e0db3458d8ee2868046d6f658295&language=en-US&query=${query}&page=1&include_adult=false`);\n        const data = await response.json();\n        setMovies(data.results);\n    }\n    */\n\n    const searchMovies = (e) =>{\n        e.preventDefault();\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=2833e0db3458d8ee2868046d6f658295&language=en-US&query=${query}&page=1&include_adult=false`;\n        fetch(url)\n            .then(response => response.json())\n            .then(data =>{\n                console.log(data.results);\n                setMovies(data.results);\n            })\n    }\n\n    const allMovies = movies.filter(movie => movie.poster_path).map(movie =>\n        <MovieCard key={movie.id} movie={movie} />\n        );\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"title\">React Movie Search</h1>\n            <form className=\"form\" onSubmit={searchMovies}>\n                <label className=\"label\">Movie:</label>\n                <input  \n                    type=\"text\"\n                    className=\"input\"\n                    placeholder=\"i.e. Big\"\n                    value={query}\n                    onChange={(evt) => setQuery(evt.target.value) }\n                    \n                />\n                <button className=\"button\">Search</button>\n            </form>\n            <div className=\"card-list\">\n                {allMovies}\n            </div>\n\n            \n            \n            \n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}